// Generated by CoffeeScript 1.12.1
(function() {
  var Auth0Strategy, PORT, PORT_T, app, assert, auth0Conf, callbackPath, ensureLoggedIn, express, passport, session, sessionMW, strategy;

  express = require('express');

  session = require('express-session');

  passport = require('passport');

  assert = require('assert');

  ensureLoggedIn = (require('connect-ensure-login')).ensureLoggedIn();

  Auth0Strategy = require('passport-auth0');

  PORT = process.env.PORT || 6660;

  PORT_T = PORT + 1;

  callbackPath = '/callback';

  auth0Conf = {
    domain: process.env.AUTH0_DOMAIN,
    clientID: process.env.AUTH0_CLIENT_ID,
    clientSecret: process.env.AUTH0_CLIENT_SECRET,
    callbackURL: "http://localhost:" + PORT + callbackPath
  };

  assert(auth0Conf.domain, "AUTH0_DOMAIN is undef");

  assert(auth0Conf.clientID, "AUTH0_CLIENT_ID is undef");

  assert(auth0Conf.clientSecret, "AUTH0_CLIENT_SECRET is undef");

  strategy = new Auth0Strategy(auth0Conf, function(accessToken, refreshToken, extraParams, profile, done) {
    return done(null, profile);
  });

  passport.use(strategy);

  passport.serializeUser(function(user, done) {
    return done(null, user);
  });

  passport.deserializeUser(function(user, done) {
    return done(null, user);
  });

  app = express();

  sessionMW = session({
    secret: 'aj0hgg8 52-/+.a"{',
    resave: true,
    saveUninitialized: true
  });

  app.use(sessionMW);

  app.use(passport.initialize());

  app.use(passport.session());

  app.use("/$", function(req, res) {
    return res.send("<p>welcome: 'request'</p> <p>try: <a href=/proxy-test>secure-data</a></p>");
  });

  app.use("/proxy-test", ensureLoggedIn, (require('./routes/test'))(PORT_T));

  app.use((require('./routes/security'))(passport, auth0Conf, callbackPath));

  app.listen(PORT);

  console.log("port.er on :" + PORT);

  (require('./test-app'))(PORT_T);

}).call(this);

//# sourceMappingURL=index.js.map
